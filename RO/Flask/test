from gurobipy import Model, GRB
from math import ceil

# Données d'exemple
n = 5  # Nombre de tâches
M = 3  # Temps maximal par période
T = 20  # Temps total disponible
v = [1, 2, 3, 2, 1]  # Valeur des tâches

# Création du modèle
model = Model("Task_Scheduling")

# Variables de décision
x = model.addVars(n, vtype=GRB.CONTINUOUS, name="x")  # Durée totale allouée à chaque tâche
y = model.addVars(n, n, vtype=GRB.CONTINUOUS, name="y")  # Temps alloué à chaque tâche par période
z = model.addVars(n, vtype=GRB.INTEGER, name="z")  # Nombre de périodes nécessaires pour chaque tâche
b = model.addVars(n, n, vtype=GRB.BINARY, name="b")  # Variable binaire pour activer une période

# Fonction objectif
model.setObjective(sum(v[i] * x[i] for i in range(n)), GRB.MAXIMIZE)

# Contraintes
# Limitation du temps total
model.addConstr(sum(x[i] for i in range(n)) <= T, "Total_Time")

# Définir les contraintes pour le nombre de périodes nécessaires pour chaque tâche
for i in range(n):
    model.addConstr(z[i] >= x[i] / M, f"Periods_Task_{i}")

# Temps total alloué à chaque tâche
for i in range(n):
    model.addConstr(sum(y[i, k] for k in range(n)) == x[i], f"Task_{i}_Time_Allocation")

# Limitation du temps par période et activation avec big-M
for i in range(n):
    for k in range(n):
        # Contraindre y[i, k] à être au plus M * b[i, k]
        model.addConstr(y[i, k] <= M * b[i, k], f"Max_Period_Time_{i}_{k}")
        # Assurer que b[i, k] est activé uniquement si k < z[i]
        model.addConstr(k + 1 <= z[i] + (1 - b[i, k]) * n, f"Activation_{i}_{k}")

# Optimisation
model.optimize()

# Affichage des résultats
if model.status == GRB.OPTIMAL:
    for i in range(n):
        # Affichage de la durée décidée pour la tâche i
        print(f"Tâche {i + 1}: Durée décidée = {x[i].x:.2f} unités de temps")
        
        # Affichage des temps alloués pour chaque période de la tâche i
        for k in range(n):  # On itère sur les périodes nécessaires
            if b[i, k].x > 0.5:  # Si la période est active
                print(f"  Période {k + 1}: Temps alloué = {y[i, k].x:.2f} unités de temps")
